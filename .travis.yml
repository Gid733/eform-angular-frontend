env:
- TEST_SUITE=testheadless2a
- TEST_SUITE=testheadless2b
- TEST_SUITE=testheadless2c
- TEST_SUITE=testheadless2d
- TEST_SUITE=testheadless2e
- TEST_SUITE=testheadless2f

dist: bionic
language: csharp
cache:
  directories:
  - eform-client/node_modules
mono: none
dotnet: 2.2
addons:
  chrome: stable
services:
- mysql
script:
  - nvm install 11.0.0
  - nvm use 11.0.0
  - pip install --user awscli
  - echo 'deb http://www.rabbitmq.com/debian/ testing main' | sudo tee /etc/apt/sources.list.d/rabbitmq.list
  - wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -
  - sudo apt-get update
  - sudo apt-get install rabbitmq-server
  - sudo systemctl enable rabbitmq-server
  - sudo systemctl start rabbitmq-server
  - sudo rabbitmqctl add_user admin password 
  - sudo rabbitmqctl set_user_tags admin administrator
  - sudo rabbitmqctl set_permissions -p / admin ".*" ".*" ".*"
  - sudo rabbitmq-plugins enable rabbitmq_management	
  - wget http://localhost:15672/cli/rabbitmqadmin
  - chmod +x rabbitmqadmin
  - ./rabbitmqadmin declare queue name=eformsdk-input durable=true
  - dotnet restore -v q eFormAPI/eFormAPI.sln
  - dotnet build eFormAPI/eFormAPI.sln
  - dotnet test -v n eFormAPI/eFormAPI.Web.Tests/eFormAPI.Web.Tests.csproj
  - dotnet test -v n eFormAPI/eFormAPI.Web.Integration.Tests/eFormAPI.Web.Integration.Tests.csproj
  - mkdir -p /home/travis/build/microting/eform-angular-frontend/eform-client/errorShots
  - cd eform-client && npm install
  - npm start &
  - dotnet run --project ../eFormAPI/eFormAPI.Web/eFormAPI.Web.csproj > dotnet_log 2>&1 &
  - sleep 40
  - npm run testheadless
  - npm run $TEST_SUITE
  - aws s3 sync errorShots/ s3://$S3_STORAGE_FOLDER/$TRAVIS_BUILD_NUMBER || true
after_success:
- echo dotnet test and npm test succeeded
after_faliure:
- echo dotnet test and npm test failed
